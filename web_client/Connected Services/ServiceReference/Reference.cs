//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace web_client.ServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IUsersManagementService")]
    public interface IUsersManagementService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersManagementService/Test", ReplyAction="http://tempuri.org/IUsersManagementService/TestResponse")]
        bool Test(string input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersManagementService/Test", ReplyAction="http://tempuri.org/IUsersManagementService/TestResponse")]
        System.Threading.Tasks.Task<bool> TestAsync(string input);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersManagementService/ListUsers", ReplyAction="http://tempuri.org/IUsersManagementService/ListUsersResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(backend2.User))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(backend2.Passport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(backend2.sex))]
        object ListUsers(string sessionKey, byte[] hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersManagementService/ListUsers", ReplyAction="http://tempuri.org/IUsersManagementService/ListUsersResponse")]
        System.Threading.Tasks.Task<object> ListUsersAsync(string sessionKey, byte[] hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersManagementService/Login", ReplyAction="http://tempuri.org/IUsersManagementService/LoginResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(backend2.User))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(backend2.Passport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(backend2.sex))]
        object Login([System.ServiceModel.MessageParameterAttribute(Name="login")] string login1, string password, byte[] hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersManagementService/Login", ReplyAction="http://tempuri.org/IUsersManagementService/LoginResponse")]
        System.Threading.Tasks.Task<object> LoginAsync(string login, string password, byte[] hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersManagementService/Logout", ReplyAction="http://tempuri.org/IUsersManagementService/LogoutResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(backend2.User))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(backend2.Passport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(backend2.sex))]
        object Logout(string sessionKey, byte[] hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersManagementService/Logout", ReplyAction="http://tempuri.org/IUsersManagementService/LogoutResponse")]
        System.Threading.Tasks.Task<object> LogoutAsync(string sessionKey, byte[] hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersManagementService/Register", ReplyAction="http://tempuri.org/IUsersManagementService/RegisterResponse")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(backend2.User))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(backend2.Passport))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(backend2.sex))]
        object Register(backend2.User data, byte[] hash);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUsersManagementService/Register", ReplyAction="http://tempuri.org/IUsersManagementService/RegisterResponse")]
        System.Threading.Tasks.Task<object> RegisterAsync(backend2.User data, byte[] hash);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUsersManagementServiceChannel : web_client.ServiceReference.IUsersManagementService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UsersManagementServiceClient : System.ServiceModel.ClientBase<web_client.ServiceReference.IUsersManagementService>, web_client.ServiceReference.IUsersManagementService {
        
        public UsersManagementServiceClient() {
        }
        
        public UsersManagementServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UsersManagementServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UsersManagementServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UsersManagementServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Test(string input) {
            return base.Channel.Test(input);
        }
        
        public System.Threading.Tasks.Task<bool> TestAsync(string input) {
            return base.Channel.TestAsync(input);
        }
        
        public object ListUsers(string sessionKey, byte[] hash) {
            return base.Channel.ListUsers(sessionKey, hash);
        }
        
        public System.Threading.Tasks.Task<object> ListUsersAsync(string sessionKey, byte[] hash) {
            return base.Channel.ListUsersAsync(sessionKey, hash);
        }
        
        public object Login(string login1, string password, byte[] hash) {
            return base.Channel.Login(login1, password, hash);
        }
        
        public System.Threading.Tasks.Task<object> LoginAsync(string login, string password, byte[] hash) {
            return base.Channel.LoginAsync(login, password, hash);
        }
        
        public object Logout(string sessionKey, byte[] hash) {
            return base.Channel.Logout(sessionKey, hash);
        }
        
        public System.Threading.Tasks.Task<object> LogoutAsync(string sessionKey, byte[] hash) {
            return base.Channel.LogoutAsync(sessionKey, hash);
        }
        
        public object Register(backend2.User data, byte[] hash) {
            return base.Channel.Register(data, hash);
        }
        
        public System.Threading.Tasks.Task<object> RegisterAsync(backend2.User data, byte[] hash) {
            return base.Channel.RegisterAsync(data, hash);
        }
    }
}
